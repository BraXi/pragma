// this file was generated by pragma engine version 0.13 (build: Aug 11 2023 14:30:23)
// DO NOT EDIT

// number of builtins: 84
// server: 51
// client: 0
// common: 32
// 4 developer builtins execute only when 'developer_script' is enabled

void(string s) print = #1; // both
void(string s) dprint = #2; // both
void() resetrunaway = #3; // both
void() traceon = #4; // both - devmode
void() traceoff = #5; // both - devmode
void() crash = #6; // both - devmode
void() printstack = #7; // both - devmode
void(string str) localcmd = #8; // both
float() argc = #9; // both
string(float idx) argv = #10; // both
float(string str) cvar = #11; // both
string(string str) cvarstring = #12; // both
void(string str, string val) cvarset = #13; // both
void(string str, string val) cvarforceset = #14; // both
float(string s) strlen = #15; // both
string(string s, float idx) strat = #16; // both
float(string s1, string s2) issubstr = #17; // both
string(float f) ftos = #18; // both
float(string s) stof = #19; // both
string(vector v1) vtos = #20; // both
float(float val) rint = #21; // both
float(float val) floor = #22; // both
float(float val) ceil = #23; // both
float(float val) sin = #24; // both
float(float val) cos = #25; // both
float(float val) sqrt = #26; // both
vector(vector in) normalize = #27; // both
float(vector in) vlen = #28; // both
float(vector in) vectoyaw = #29; // both
float(vector in) vectoangles = #30; // both
float() random = #31; // both
void(vector v1) anglevectors = #32; // both
float(string n) precache_model = #33; // sv
float(string n) precache_sound = #34; // sv
float(string n) precache_image = #35; // sv
entity() spawn = #36; // sv
void(entity e) remove = #37; // sv
entity(float idx) getent = #38; // sv
entity(entity prev) nextent = #39; // sv
entity(entity e, .string fld, string match) find = #40; // sv
entity(entity e, vector v, float r) findradius = #41; // sv
float(entity e) getentnum = #42; // sv
void(entity e, vector v) setorigin = #43; // sv
void(entity e, string s) setmodel = #44; // sv
void(entity e, vector v1, vector v2) setsize = #45; // sv
void(entity e) linkentity = #46; // sv
void(entity e) unlinkentity = #47; // sv
float(vector v) pointcontents = #48; // sv
void(vector p1, vector v1, vector v2, vector p2, entity e, float c) trace = #49; // sv
void(vector v, entity e, float ch, string snd, float vol, float att, float tofs) playsound = #50; // sv
void(float a1, float a2) SetAreaPortalState = #51; // sv
float(float a1, float a2) AreasConnected = #52; // sv
float(vector v1, vector v2) inPVS = #53; // sv
float(vector v1, vector v2) inPHS = #54; // sv
void(entity e, float pl, string s) sprint = #55; // sv
void(float pl, string s) bprint = #56; // sv
void(entity e, string s) centerprint = #57; // sv
void(float  k, string v) configstring = #58; // sv
void(float s, string v) lightstyle = #59; // sv
void(entity e, float r) MSG_Unicast = #60; // sv
void(vector v, float to) MSG_Multicast = #61; // sv
void(string v) MSG_WriteChar = #62; // sv
void(float v) MSG_WriteByte = #63; // sv
void(float v) MSG_WriteShort = #64; // sv
void(float v) MSG_WriteLong = #65; // sv
void(string v) MSG_WriteString = #66; // sv
void(vector v) MSG_WritePos = #67; // sv
void(vector v) MSG_WriteDir = #68; // sv
void(float v) MSG_WriteAngle = #69; // sv
void(entity e, string s) stuffcmd = #70; // sv
float(entity e) isplayer = #71; // sv
float(entity e, string s) setviewmodel = #72; // sv
void(entity e, float f, vector v1, vector v2) setviewmodelparms = #73; // sv
void(entity e, float f) setfieldofview = #74; // sv
float(entity e) getfieldofview = #75; // sv
void(entity e, vector v1, float f) setviewblend = #76; // sv
void(entity e, vector v1) setviewoffset = #77; // sv
vector(entity e) getviewoffset = #78; // sv
void(entity p, float idx, float val) saveclientfield = #79; // sv
float(entity player, float index) loadclientfield = #80; // sv
void(float idx, float val) saveglobal = #81; // sv
float(float index) loadglobal = #82; // sv
float(string nm, float sg, float sc) changemap = #83; // sv

// void(string s) print = #1;
void(string s, string s2) print2 = #1;
void(string s, string s2, string s3) print3 = #1;
void(string s, string s2, string s3, string s4) print4 = #1;
void(string s, string s2, string s3, string s4, string s5) print5 = #1;
void(string s, string s2, string s3, string s4, string s5, string s6) print6 = #1;
void(string s, string s2, string s3, string s4, string s5, string s6, string s7) print7 = #1;
void(string s, string s2, string s3, string s4, string s5, string s6, string s7, string s8) print8 = #1;

// void(string s) dprint = #2;
void(string s, string s2) dprint2 = #2;
void(string s, string s2, string s3) dprint3 = #2;
void(string s, string s2, string s3, string s4) dprint4 = #2;
void(string s, string s2, string s3, string s4, string s5) dprint5 = #2;
void(string s, string s2, string s3, string s4, string s5, string s6) dprint6 = #2;
void(string s, string s2, string s3, string s4, string s5, string s6, string s7 ) dprint7 = #2;
void(string s, string s2, string s3, string s4, string s5, string s6, string s7, string s8) dprint8 = #2;

// void(entity e, float pl, string s) sprint = #55;
void(entity e, float pl, string s, string s2) sprint2 = #55;
void(entity e, float pl, string s, string s2, string s3) sprint3 = #55;
void(entity e, float pl, string s, string s2, string s3, string s4) sprint4 = #55;
void(entity e, float pl, string s, string s2, string s3, string s4, string s5) sprint5 = #55;
void(entity e, float pl, string s, string s2, string s3, string s4, string s5, string s6) sprint6 = #55;

// void(float pl, string s) bprint = #56;
void(float pl, string s, string s2) bprint2 = #56;
void(float pl, string s, string s2, string s3) bprint3 = #56;
void(float pl, string s, string s2, string s3, string s4) bprint4 = #56;
void(float pl, string s, string s2, string s3, string s4, string s5) bprint5 = #56;
void(float pl, string s, string s2, string s3, string s4, string s5, string s6) bprint6 = #56;
void(float pl, string s, string s2, string s3, string s4, string s5, string s6, string s7) bprint7 = #56;

// void(entity e, string s) centerprint = #57;
void(entity e, string s, string s2) centerprint2 = #57;
void(entity e, string s, string s2, string s3) centerprint3 = #57;
void(entity e, string s, string s2, string s3, string s4) centerprint4 = #57;
void(entity e, string s, string s2, string s3, string s4, string s5) centerprint5 = #57;
void(entity e, string s, string s2, string s3, string s4, string s5, string s6) centerprint6 = #57;
void(entity e, string s, string s2, string s3, string s4, string s5, string s6, string s7) centerprint7 = #57;
