float pic_health;
//float dm_statusbar, single_statusbar;
float snd_fry, sm_meat_index;

/*
xl - x

xr - width +

// health
"xl	10 "
"hnum "
"xl	60 "
"pic 0 "

// ammo
"if 2 "
"	xr	-120 "
"	anum "
"	xr	-50 "
"	pic 2 "
"endif "

// armor
"if 4 "
"yb	-66 "
"	xl 10 "
"	rnum "
"	xl 60 "
"	pic 4 "
"endif "

*/
string dm_statusbar =
"yb	-36 "

// health
"xl	10 "
"pic 0 "
"xl	40 "
"hnum "

// ammo
"if 2 "
"xr	-120 "
"anum "
"xr	-50 "
"pic 2 "
"endif "

// armor
"if 4 "
"yb	-66 "
"xl 10 "
"pic 4 "
"xl 40 "
"rnum "
"endif "

"yb	-36 "
// selected item
"if 6 "
"	xv	296 "
"	pic 6 "
"endif "

"yb	-50 "

// picked up item
"if 7 "
"	xv	0 "
"	pic 7 "
"	xv	26 "
"	yb	-42 "
"	stat_string 8 "
"	yb	-50 "
"endif "

// timer
"if 9 "
"	xv	246 "
"	num	2	10 "
"	xv	296 "
"	pic	9 "
"endif "

//  help / weapon icon 
"if 11 "
"	xv	148 "
"	pic	11 "
"endif "

//  frags
"xr	-50 "
"yt 2 "
"num 3 14 "

// spectator
//"if 17 "
  "xv 0 "
  "yb -14 "
  "cstring \"pragma 0.15 debug build\" "
//"endif "

// chase camera
"if 16 "
  "xv 0 "
  "yb -68 "
  "string \"Chasing\" "
  "xv 64 "
  "stat_string 16 "
"endif "
;

#define STAT_HEALTH_ICON		0
#define	STAT_HEALTH				1
#define	STAT_AMMO_ICON			2
#define	STAT_AMMO				3
#define	STAT_ARMOR_ICON			4
#define	STAT_ARMOR				5
#define	STAT_SELECTED_ICON		6
#define	STAT_PICKUP_ICON		7
#define	STAT_PICKUP_STRING		8
#define	STAT_TIMER_ICON			9
#define	STAT_TIMER				10
#define	STAT_HELPICON			11
#define	STAT_SELECTED_ITEM		12
#define	STAT_LAYOUTS			13
#define	STAT_FRAGS				14
#define	STAT_FLASHES			15		// cleared each frame, 1 = health, 2 = armor
#define STAT_CHASE				16
#define STAT_SPECTATOR			17


/*QUAKED worldspawn (0 0 0) ?

Only used for the world.
"sky"	environment map name
"skyaxis"	vector axis for rotating sky
"skyrotate"	speed of rotation in degrees/second
"sounds"	music cd track number
"gravity"	800 is default gravity
"message"	text to print at user logon
*/
float() SP_worldspawn =
{
	// never change these three lines or weird shit will happen
	self.movetype = MOVETYPE_PUSH;
	self.solid = SOLID_BSP;
	self.modelindex = 1; // world model is always index 1		

	// make some data visible to the server
	if(self.message)
	{
		configstring(CS_NAME, self.message);
	}
	
	if (self.sky)
		configstring(CS_SKY, self.sky);
	else
	//	configstring(CS_SKY, "unit1_");

	float maxc;
	
	maxc = cvar("sv_maxclients");
	// braxi -- fix skyrotation
	configstring(CS_SKYROTATE, "0" );
	configstring(CS_SKYAXIS, "0 0 0" /*vtos(skyaxis)*/ );
	configstring(CS_MAXCLIENTS, ftos(maxc)); //FIXME

	// status bar program
	if(cvar_deathmatch >= 1)
		configstring(CS_STATUSBAR, "0");
	else
		configstring(CS_STATUSBAR, "1");
	
	configstring(CS_STATUSBAR, dm_statusbar);

	//---------------


	// help icon for statusbar
	precache_image("i_help");
	pic_health = precache_image("i_health");
	precache_image("help");
	precache_image("field_3");

	if (!self.gravity)
		cvarset("sv_gravity", "800");
	else
		cvarset("sv_gravity", ftos(self.gravity));

	snd_fry = precache_sound("player/fry.wav");	// standing in lava / slime

	precache_sound("player/lava1.wav");
	precache_sound("player/lava2.wav");

	precache_sound("misc/pc_up.wav");
	precache_sound("misc/talk1.wav");

	precache_sound("misc/udeath.wav");

	// gibs
	precache_sound("items/respawn1.wav");

	// sexed sounds
	precache_sound("*death1.wav");
	precache_sound("*death2.wav");
	precache_sound("*death3.wav");
	precache_sound("*death4.wav");
	precache_sound("*fall1.wav");
	precache_sound("*fall2.wav");	
	precache_sound("*gurp1.wav");		// drowning damage
	precache_sound("*gurp2.wav");	
	precache_sound("*jump1.wav");		// player jump
	precache_sound("*pain25_1.wav");
	precache_sound("*pain25_2.wav");
	precache_sound("*pain50_1.wav");
	precache_sound("*pain50_2.wav");
	precache_sound("*pain75_1.wav");
	precache_sound("*pain75_2.wav");
	precache_sound("*pain100_1.wav");
	precache_sound("*pain100_2.wav");

	// sexed models
	// THIS ORDER MUST MATCH THE DEFINES IN g_local.h
	// you can add more, max 20
	precache_model("#w_blaster.md2");
	precache_model("#w_shotgun.md2");
	precache_model("#w_sshotgun.md2");
	precache_model("#w_machinegun.md2");
	precache_model("#w_chaingun.md2");
	precache_model("#a_grenades.md2");
	precache_model("#w_glauncher.md2");
	precache_model("#w_rlauncher.md2");
	precache_model("#w_hyperblaster.md2");
	precache_model("#w_railgun.md2");
	precache_model("#w_bfg.md2");

	//-------------------

	precache_sound("player/gasp1.wav");		// gasping for air
	precache_sound("player/gasp2.wav");		// head breaking surface, not gasping

	precache_sound("player/watr_in.wav");	// feet hitting water
	precache_sound("player/watr_out.wav");	// feet leaving water

	precache_sound("player/watr_un.wav");	// head going underwater
	
	precache_sound("player/u_breath1.wav");
	precache_sound("player/u_breath2.wav");

	precache_sound("items/pkup.wav");		// bonus item pickup
	precache_sound("world/land.wav");		// landing thud
	precache_sound("misc/h2ohit1.wav");		// landing splash

	precache_sound("items/damage.wav");
	precache_sound("items/protect.wav");
	precache_sound("items/protect4.wav");
	precache_sound("weapons/noammo.wav");

	precache_sound("infantry/inflies1.wav");

	sm_meat_index = precache_model("models/objects/gibs/sm_meat/tris.md2");
	precache_model("models/objects/gibs/arm/tris.md2");
	precache_model("models/objects/gibs/bone/tris.md2");
	precache_model("models/objects/gibs/bone2/tris.md2");
	precache_model("models/objects/gibs/chest/tris.md2");
	precache_model("models/objects/gibs/skull/tris.md2");
	precache_model("models/objects/gibs/head2/tris.md2");

	InitLightStyles(); // <-- ents/lights.qc
	return true;
};
